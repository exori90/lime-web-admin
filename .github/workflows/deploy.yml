name: Deploy Application

on:
  push:
    branches:
      - main        # Production deployment
      - develop     # Test/staging deployment
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create test environment file
        run: |
          cat > .env.local << 'EOF'
          NODE_ENV=test
          NEXT_PUBLIC_API_BASE_URL=https://api.nektar.gg/api
          NEXT_PUBLIC_AUTH_API_URL=https://login.nektar.gg/api
          NEXT_PUBLIC_USERS_API_URL=https://api.nektar.gg/api/users
          NEXT_PUBLIC_FILES_API_URL=https://api.nektar.gg/api/files
          NEXT_PUBLIC_ORCHESTRATOR_API_URL=https://orchestrator.nektar.gg/api
          NEXT_PUBLIC_APP_NAME="Lime Web Admin (Test)"
          NEXT_PUBLIC_APP_VERSION="1.0.0-test"
          NEXT_PUBLIC_APP_ENV="test"
          NEXT_PUBLIC_ENABLE_DEBUG=false
          NEXT_PUBLIC_ENABLE_MOCK_API=false
          NEXT_PUBLIC_ENABLE_ANALYTICS=false
          NEXT_PUBLIC_API_TIMEOUT=10000
          NEXT_PUBLIC_API_RETRIES=3
          NEXT_PUBLIC_API_RETRY_DELAY=1000
          NEXT_PUBLIC_MAX_FILE_SIZE=5
          NEXT_PUBLIC_ALLOWED_FILE_TYPES="image/jpeg,image/png,image/gif,application/pdf"
          NEXT_PUBLIC_CACHE_TTL=600000
          EOF

      - name: Check environment
        run: npm run env:check

      - name: Lint code
        run: npm run lint

      - name: Build application
        run: npm run build

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create staging environment file
        run: |
          cat > .env.production << 'EOF'
          NODE_ENV=production
          NEXT_PUBLIC_API_BASE_URL=https://api.nektar.gg/api
          NEXT_PUBLIC_AUTH_API_URL=https://login.nektar.gg/api
          NEXT_PUBLIC_USERS_API_URL=https://api.nektar.gg/api/users
          NEXT_PUBLIC_FILES_API_URL=https://api.nektar.gg/api/files
          NEXT_PUBLIC_ORCHESTRATOR_API_URL=https://orchestrator.nektar.gg/api
          NEXT_PUBLIC_APP_NAME="Lime Web Admin (Staging)"
          NEXT_PUBLIC_APP_VERSION="${{ github.sha }}"
          NEXT_PUBLIC_APP_ENV="staging"
          NEXT_PUBLIC_ENABLE_DEBUG=true
          NEXT_PUBLIC_ENABLE_MOCK_API=false
          NEXT_PUBLIC_ENABLE_ANALYTICS=false
          NEXT_PUBLIC_API_TIMEOUT=10000
          NEXT_PUBLIC_API_RETRIES=3
          NEXT_PUBLIC_API_RETRY_DELAY=1000
          NEXT_PUBLIC_MAX_FILE_SIZE=5
          NEXT_PUBLIC_ALLOWED_FILE_TYPES="image/jpeg,image/png,image/gif,application/pdf"
          NEXT_PUBLIC_CACHE_TTL=300000
          EOF

      - name: Build for staging
        run: npm run build

      - name: Deploy to Vercel (Staging)
        uses: vercel/action@v1
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--env NODE_ENV=production'

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create production environment file
        run: |
          cat > .env.production << 'EOF'
          NODE_ENV=production
          NEXT_PUBLIC_API_BASE_URL=https://api.nektar.gg/api
          NEXT_PUBLIC_AUTH_API_URL=https://login.nektar.gg/api
          NEXT_PUBLIC_USERS_API_URL=https://api.nektar.gg/api/users
          NEXT_PUBLIC_FILES_API_URL=https://api.nektar.gg/api/files
          NEXT_PUBLIC_ORCHESTRATOR_API_URL=https://orchestrator.nektar.gg/api
          NEXT_PUBLIC_APP_NAME="Lime Web Admin"
          NEXT_PUBLIC_APP_VERSION="${{ github.sha }}"
          NEXT_PUBLIC_APP_ENV="production"
          NEXT_PUBLIC_ENABLE_DEBUG=false
          NEXT_PUBLIC_ENABLE_MOCK_API=false
          NEXT_PUBLIC_ENABLE_ANALYTICS=true
          NEXT_PUBLIC_API_TIMEOUT=10000
          NEXT_PUBLIC_API_RETRIES=3
          NEXT_PUBLIC_API_RETRY_DELAY=1000
          NEXT_PUBLIC_MAX_FILE_SIZE=5
          NEXT_PUBLIC_ALLOWED_FILE_TYPES="image/jpeg,image/png,image/gif,application/pdf"
          NEXT_PUBLIC_CACHE_TTL=300000
          NEXT_PUBLIC_GOOGLE_ANALYTICS_ID=${{ secrets.GOOGLE_ANALYTICS_ID }}
          NEXT_PUBLIC_CDN_URL=${{ secrets.CDN_URL }}
          EOF

      - name: Build for production
        run: npm run build

      - name: Deploy to Vercel (Production)
        uses: vercel/action@v1
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod --env NODE_ENV=production'